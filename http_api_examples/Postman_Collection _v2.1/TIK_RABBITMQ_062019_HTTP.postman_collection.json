{
	"info": {
		"_postman_id": "04e7c9f7-23dd-488a-b7c0-df8529e9fded",
		"name": "TIK_RABBITMQ_062019_HTTP",
		"description": "Ejemplos de utilizaci√≥n del Management API HTTP de RabbitMQ.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "01_List_Virtual_Hosts",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:15672/api/vhosts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "15672",
					"path": [
						"api",
						"vhosts"
					]
				},
				"description": "Obtener listado de VHOSTS"
			},
			"response": []
		},
		{
			"name": "02_List_Current_queues",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:15672/api/queues?page=1&page_size=100&name=&use_regex=false&pagination=true",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "15672",
					"path": [
						"api",
						"queues"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "page_size",
							"value": "100"
						},
						{
							"key": "name",
							"value": ""
						},
						{
							"key": "use_regex",
							"value": "false"
						},
						{
							"key": "pagination",
							"value": "true"
						}
					]
				},
				"description": "Obtener Lista de las QUEUES actuales "
			},
			"response": []
		},
		{
			"name": "03_Create_a_new_test_queue_with_params",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"vhost\": \"/\",\n    \"name\": \"TestQueue\",\n    \"durable\": \"true\",\n    \"auto_delete\": \"false\",\n    \"arguments\": {\n        \"x-max-length\": 1200,\n        \"x-max-length-bytes\": 126976,\n        \"x-overflow\": \"reject-publish\"\n    }\n}"
				},
				"url": {
					"raw": "http://localhost:15672/api/queues/%2F/TestQueue",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "15672",
					"path": [
						"api",
						"queues",
						"%2F",
						"TestQueue"
					]
				},
				"description": "x-max-length:\n    How many (ready) messages a queue can contain before \n    it starts to drop them from its head.\nx-max-length-bytes:\n    Total body size for ready messages a queue can contain \n    before it starts to drop them from its head.\nx-overflow:\n    Sets the queue overflow behaviour. \n    This determines what happens to messages when \n    the maximum length of a queue is reached. \n    Valid values are 'drop-head' or 'reject-publish'. "
			},
			"response": []
		},
		{
			"name": "04_Get_Overview_info_about_the_test_queue",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:15672/api/queues/%2F/TestQueue?lengths_age=60&lengths_incr=5&msg_rates_age=60&msg_rates_incr=5&data_rates_age=60&data_rates_incr=5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "15672",
					"path": [
						"api",
						"queues",
						"%2F",
						"TestQueue"
					],
					"query": [
						{
							"key": "lengths_age",
							"value": "60"
						},
						{
							"key": "lengths_incr",
							"value": "5"
						},
						{
							"key": "msg_rates_age",
							"value": "60"
						},
						{
							"key": "msg_rates_incr",
							"value": "5"
						},
						{
							"key": "data_rates_age",
							"value": "60"
						},
						{
							"key": "data_rates_incr",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "05_Get_List_of_Bindings_of_the_test_queue",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:15672/api/queues/%2F/TestQueue/bindings",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "15672",
					"path": [
						"api",
						"queues",
						"%2F",
						"TestQueue",
						"bindings"
					]
				}
			},
			"response": []
		},
		{
			"name": "06_Publish_a_message_directly_to_the_test_queue",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json;charset=UTF-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"vhost\": \"/\",\n  \"name\": \"amq.default\",\n  \"properties\": {\n    \"delivery_mode\": 2,\n    \"headers\": {\n      \"x-custom-hdr1\": \"A String\",\n      \"x-custom-hdr2\": 25,\n      \"x-custom-hdr3\": true\n    },\n    \"content_type\": \"application/json\",\n    \"content_encoding\": \"base64\",\n    \"user_id\": \"guest\",\n    \"app_id\": \"testApp01\"\n  },\n  \"routing_key\": \"TestQueue\",\n  \"delivery_mode\": \"2\",\n  \"payload\": \"\",\n  \"headers\": {\n    \"x-custom-hdr1\": \"A String\",\n    \"x-custom-hdr2\": 25,\n    \"x-custom-hdr3\": true\n  },\n  \"props\": {\n    \"content_type\": \"application/json\",\n    \"user_id\": \"guest\",\n    \"app_id\": \"testApp01\",\n    \"content_encoding\": \"base64\"\n  },\n  \"payload_encoding\": \"string\"\n}"
				},
				"url": {
					"raw": "http://localhost:15672/api/exchanges/%2F/amq.default/publish",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "15672",
					"path": [
						"api",
						"exchanges",
						"%2F",
						"amq.default",
						"publish"
					]
				},
				"description": "You can set other message properties here (delivery mode and headers are pulled out as the most common cases).\n\nInvalid properties will be ignored. Valid properties are:\n\n    content_type\n    content_encoding\n    priority\n    correlation_id\n    reply_to\n    expiration\n    message_id\n    timestamp\n    type\n    user_id\n    app_id\n    cluster_id"
			},
			"response": []
		},
		{
			"name": "07_GET_Up_to_10_first_messages_and_Acknowledge (No re-queue)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json;charset=UTF-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"vhost\": \"/\",\n    \"name\": \"TestQueue\",\n    \"truncate\": \"50000\",\n    \"ackmode\": \"ack_requeue_false\",\n    \"encoding\": \"auto\",\n    \"count\": \"10\"\n}"
				},
				"url": {
					"raw": "http://localhost:15672/api/queues/%2F/TestQueue/get",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "15672",
					"path": [
						"api",
						"queues",
						"%2F",
						"TestQueue",
						"get"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "guest",
				"type": "string"
			},
			{
				"key": "username",
				"value": "guest",
				"type": "string"
			}
		]
	}
}